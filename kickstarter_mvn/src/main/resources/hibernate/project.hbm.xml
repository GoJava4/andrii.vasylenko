<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE hibernate-mapping PUBLIC
"-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<class name="kickstarter.entity.Project" table="Projects">
		<id name="id" type="java.lang.Integer">
			<column name="id" />
			<generator class="identity" />
		</id>

		<many-to-one name="category" class="kickstarter.entity.Category"
			fetch="join" foreign-key="projects_id_category_fkey">
			<column name="id_category" not-null="true" />
		</many-to-one>

		<property name="name" type="string">
			<column name="name" length="255" />
		</property>

		<property name="description" type="string">
			<column name="description" length="255" />
		</property>

		<property name="totalAmount" type="java.lang.Integer">
			<column name="total_amount" length="255" />
		</property>

		<property name="finalDate" type="java.util.Date">
			<column name="final_date" />
		</property>

		<property name="history" type="string">
			<column name="history" length="255" />
		</property>

		<property name="link" type="string">
			<column name="link" length="255" />
		</property>

		<set name="payments" table="Payments" inverse="true" lazy="true"
			fetch="subselect" order-by="id">
			<key>
				<column name="id_project" not-null="true" />
			</key>
			<one-to-many class="kickstarter.entity.Payment" />
		</set>

		<set name="questions" table="Questions" inverse="true" lazy="true"
			fetch="subselect" order-by="id">
			<key>
				<column name="id_project" not-null="true" />
			</key>
			<one-to-many class="kickstarter.entity.Question" />
		</set>

		<set name="paymentVariants" table="PaymentVariants" inverse="true"
			lazy="true" fetch="subselect" order-by="id">
			<key>
				<column name="id_project" not-null="true" />
			</key>
			<one-to-many class="kickstarter.entity.PaymentVariant" />
		</set>

		<property name="collectAmount" type="java.lang.Integer">
			<formula>(SELECT SUM(payments.amount) FROM payments WHERE
				payments.id_project = id)</formula>
		</property>
	</class>
</hibernate-mapping>